user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    client_max_body_size 10000M;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    proxy_max_temp_file_size 0;

    server {
        listen 80;
        server_name phototours.netlify.app 127.0.0.1 localhost;

        location / {
            resolver 127.0.0.11;
            # to find right ip if 172.17.0.1 is not working:
            # linux ```ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+'```
            # macos ```ifconfig | grep 'inet ' | awk '{print $2}'```
            proxy_pass http://host.docker.internal:5174;
            proxy_connect_timeout 120s;
            proxy_read_timeout 120s;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            # 2 next fields for vite websocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # mw-server
        location /br-general {
            resolver 127.0.0.11 ipv6=off;
            set $backend host.docker.internal:8000;
            proxy_pass http://$backend;

            proxy_connect_timeout 120s;
            proxy_read_timeout 120s;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }


        # grafana
        location /grafana {
            resolver 127.0.0.11;
            proxy_pass http://host.docker.internal:9876;
            proxy_read_timeout 120s;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Rewrite the URL for Grafana
            rewrite ^/grafana/(.*)$ /$1 break;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
