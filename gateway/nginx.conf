user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    ##
    # Core setup
    ##
    resolver 127.0.0.11 valid=30s;   # Docker DNS resolver
    client_max_body_size 100M;       # reasonable limit for uploads

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    proxy_max_temp_file_size 0;

    ##
    # CORS setup (production + local dev)
    ##
    map $http_origin $cors {
        default "";
        "~^https?://(localhost(:[0-9]+)?|127\.0\.0\.1(:[0-9]+)?|brain100\.help(:[0-9]+)?|www\.brain100\.help(:[0-9]+)?)$" $http_origin;
    }

    ##
    # Main HTTPS server (production)
    ##
    server {
        listen 443 ssl http2;
        server_name brain100.help www.brain100.help;

        ssl_certificate     /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # --- Frontend (Vite build or static) ---
        location / {
            proxy_pass http://br-web:5174;
            proxy_read_timeout 120s;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # --- Backend (FastAPI) ---
        location /br-general/ {
            # --- CORS preflight ---
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' $cors always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Refresh-Token' always;
                add_header 'Access-Control-Max-Age' 3600 always;
                add_header 'Vary' 'Origin' always;
                return 204;
            }

            proxy_pass http://br-general-python:8000/br-general/;
            proxy_read_timeout 120s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Refresh-Token' always;
            add_header 'Vary' 'Origin' always;
        }

        # --- Grafana dashboard ---
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_read_timeout 120s;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/grafana/(.*)$ /$1 break;
        }
    }

    ##
    # HTTP â†’ HTTPS redirect
    ##
    server {
        listen 80;
        server_name brain100.help www.brain100.help;
        return 301 https://$host$request_uri;
    }

    ##
    # Local Development Fallback
    ##
    server {
        listen 80;
        server_name localhost 127.0.0.1;

        location / {
            proxy_pass http://br-web:5174;
        }

        location /br-general/ {
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' $cors always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Refresh-Token' always;
                add_header 'Access-Control-Max-Age' 3600 always;
                add_header 'Vary' 'Origin' always;
                return 204;
            }

            proxy_pass http://br-general-python:8000/br-general/;
            proxy_read_timeout 120s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Refresh-Token' always;
            add_header 'Vary' 'Origin' always;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
